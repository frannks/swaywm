# ███████╗██╗    ██╗ █████╗ ██╗   ██╗██╗    ██╗███╗   ███╗
# ██╔════╝██║    ██║██╔══██╗╚██╗ ██╔╝██║    ██║████╗ ████║
# ███████╗██║ █╗ ██║███████║ ╚████╔╝ ██║ █╗ ██║██╔████╔██║
# ╚════██║██║███╗██║██╔══██║  ╚██╔╝  ██║███╗██║██║╚██╔╝██║
# ███████║╚███╔███╔╝██║  ██║   ██║   ╚███╔███╔╝██║ ╚═╝ ██║
# ╚══════╝ ╚══╝╚══╝ ╚═╝  ╚═╝   ╚═╝    ╚══╝╚══╝ ╚═╝     ╚═╝
#

#                       Franklin 'frannksz' Souza
#                               @frannksz

# =================================================| EXECS INIT
exec {
    exec autotiling
}

# =================================================| VARIAVEIS
# Mod4 Win | Mod1 Alt
set $mod Mod4

# Direcionar janelas como o vim
set $left h
set $down j
set $up k
set $right l

# Definir emulador de terminal padrão
set $term kitty

# Definir launcher padrão
set $menu wofi

# Definir navegador padrão
set $browser firefox

### Output configuration
#
# Definir Wallpaper
output * bg /home/frank/Wallpapers/013.png fill

#set $wallpapers_path $HOME/Wallpapers
#output * bg $(find $wallpapers_path -type f | shuf -n 1) fill


output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# Example configuration:
#
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration

input "type:keyboard"   {
                    xkb_layout br
                    xkb_variant abnt2
                    xkb_model abnt2
            }
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# =================================================| KEYBINDS
    # Iniciar emulador de terminal
    bindsym $mod+Return exec $term

    # Fechar a janela focada
    bindsym $mod+q kill

    # Iniciar o launcher
    bindsym $mod+d exec $menu

    # Abrir navegador
    bindsym $mod+Shift+f exec $browser

     # Iniciar Telegram
     bindsym $mod+t exec telegram

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Recarregar o arquivo de config
    bindsym $mod+Shift+c reload

    # Sair do sway
    bindsym $mod+Shift+e exec swaynag -t warning -m 'Voce deseja sair do sway?' -B 'Sim, sair do sway' 'swaymsg exit'

    # GAPS
    gaps inner  6
    gaps outer  6
    default_border pixel 1
    default_floating_border pixel 1

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

# =================================================| WORKSPACES

    # Alterar entra as Workspaces
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+o move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+Shift+p scratchpad show

# =================================================| RESIZE CONTAINERS
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# =================================================| BAR STATUS
# Waybar
bar { 
  swaybar_command waybar
}

# Default bar
#bar {
    #position top

    #status_command while date +'%Y-%m-%d %X'; do sleep 1; done

    #colors {
        #statusline #ffffff
        #background #323232
        #inactive_workspace #32323200 #32323200 #5c5c5c
    #}
#}

include /etc/sway/config.d/*
